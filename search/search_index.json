{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"DIY Electronic Load Documentation","text":"<p>Welcome to the official documentation for the DIY Electronic Load project. Here you'll find the key information needed to understand the design, and to build and use your own device.</p> <p></p>"},{"location":"#table-of-contents","title":"Table of Contents","text":"<ul> <li> <p>Project Overview</p> <p>Learn about the project's goals, key features, and the tools used in its creation.</p> <p> Read the Overview</p> </li> <li> <p>Hardware Design</p> <p>A deep dive into the schematics, PCB layouts, and mechanical design of the enclosure.</p> <p> Explore the Hardware</p> </li> <li> <p>Software &amp; Firmware</p> <p>Instructions for programming the microcontroller, calibrating the device, and using the PC application.</p> <p> View Software &amp; Firmware Docs</p> </li> <li> <p>Testing &amp; Performance</p> <p>See the results of functional tests and performance measurements for the completed device.</p> <p> See Performance Data</p> </li> </ul>"},{"location":"hardware-design/","title":"Hardware Design","text":""},{"location":"hardware-design/#mechanical","title":"\ud83d\udd29 Mechanical","text":""},{"location":"hardware-design/#panel-layouts","title":"Panel Layouts","text":"<p>The diagrams below show the layout of all external controls and connectors:</p> <p></p> <p>Annotated Front Panel Wireframe</p> <p></p> <p>Annotated Back Panel Wireframe</p>"},{"location":"hardware-design/#enclosure-and-cooling","title":"Enclosure and Cooling","text":"<p>The enclosure is a hybrid construction designed for durability and ease of assembly. The main chassis is formed from 1mm thick sheet steel, which was CNC laser-cut and then bent into shape. This provides a sturdy frame for all internal components.</p> <p>The front panel is a custom 3D-printed part, allowing for precise mounting of the display, keypad, switches, and connectors.</p> <p>Heat from the power MOSFETs is dissipated by a large, tunnel-style aluminum heatsink, which is actively cooled by a temperature-controlled fan. The complete internal assembly can be seen in the image below.</p> <p></p> <p>Internal view of the electronic load</p>"},{"location":"hardware-design/#electronics","title":"\u26a1 Electronics","text":""},{"location":"hardware-design/#input-specifications","title":"Input Specifications","text":"<ul> <li> <p>Load power input (Front panel)</p> <ul> <li>Max voltage: 50V DC</li> <li>Max current: 8A</li> <li>Max dissipated power: 300W (10 min)\u00b9 / 200W (cont.)\u00b2</li> </ul> </li> <li> <p>Remote voltage sense input (Front panel)</p> <ul> <li>Max voltage: 50V DC</li> </ul> </li> <li> <p>Mains power input (Back panel)</p> <ul> <li>Voltage: 230V AC</li> <li>Max power consumption: 10W</li> </ul> </li> <li> <p>Trigger input (Front panell)</p> <ul> <li>Max voltage: 5V DC</li> </ul> </li> </ul> <p>\u00b9 Assumes ambient temperature of 25\u00b0C.  \u00b2 Assumes an initial heatsink temperature of 25\u00b0C.</p>"},{"location":"hardware-design/#architecture-overview","title":"Architecture Overview","text":"<p>Electronics block diagram</p> <p>The system's architecture is orchestrated by an <code>ATmega328P</code> microcontroller. It interfaces with several key components via I2C, including a 12-bit <code>MCP4725</code> DAC to set the load current, a 16-bit <code>ADS1115</code> ADC to measure voltage and current, and an <code>MCP79410</code> RTC for time-critical operations like battery capacity testing.</p> <p>The core of the load is the Constant Current Sink, controlled by the DAC and built around <code>AD8630</code> operational amplifier and <code>IRFP250</code> power MOSFETs. The ADC measures the current flowing through this sink and the voltage at the input terminals. A switch, controlled from the front panel, allows the voltage measurement to be taken either from the main power terminals or from the remote sense terminals via a differential amplifier built on an <code>OPA277</code> op-amp. User interaction is managed through a rotary encoder, keypad, and a 4x20 LCD display, while PC communication is handled by a dedicated USB-to-UART converter board.</p> <p>A transformer provides AC power, which is converted by the internal power supply section into three DC rails: +12V (for the cooling fan), +5V (for logic and analog circuits), and -5V (for the symmetrical supply of the differential amplifier).</p>"},{"location":"hardware-design/#pcbs","title":"PCBs","text":"<p>The system's electronics are distributed across three distinct PCBs. The functional blocks residing on each board are color-coded for clarity in the Electronics block diagram shown above.</p> <ul> <li>Main board: This two-layer PCB performs all core control, measurement, and power handling functions of the electronic load.</li> </ul> <p></p> <ul> <li>Front board: This single-layer PCB functions as the user interface board, handling manual controls and routing for the voltage measurement signals.</li> </ul> <p></p> <ul> <li>Converter board: Acts as a dedicated communication bridge for PC control, data acquisition and allows for programming of the main microcontroller. This was implemented cost-effectively by using a modified Arduino Nano board with its original microcontroller desoldered, leaving only the <code>CH340</code> USB-to-serial IC functional.</li> </ul> Angle viewTop viewBottom view <p></p> <p></p> <p></p>"},{"location":"overview/","title":"DC Electronic Load","text":""},{"location":"overview/#introduction","title":"\ud83c\udfa5 Introduction","text":"<p>Watch a full project overview on YouTube.</p> <p>This open-source programmable DC electronic load is designed to test power supplies, batteries, and other DC sources. It simulates a variety of load conditions to evaluate performance and reliability.</p> <p>The design was inspired by several community projects, especially Scullcom\u2019s Electronic DC Load.</p>"},{"location":"overview/#key-features","title":"\u2699\ufe0f Key Features","text":"<ul> <li>Supports up to 50\u202fV and 8\u202fA input</li> <li>Power dissipation: 200\u202fW continuous / 300\u202fW peak</li> <li>Five operating modes: constant current, power, resistance, step load, battery test</li> <li>Remote voltage sensing</li> <li>User-friendly interface: rotary encoder + numeric keypad</li> <li>PC application for real-time monitoring, control, and data logging</li> <li>Fully open-source: hardware, firmware, and software</li> </ul>"},{"location":"overview/#tools-used","title":"\ud83d\udee0\ufe0f Tools Used","text":"Tool Usage Autodesk Eagle Schematic and PCB design Fusion 360 3D modeling for the enclosure and front panel PlatformIO + VS Code Firmware development and microcontroller programming Qt (C++ with Qt) Desktop application for monitoring and control"},{"location":"software/","title":"Software & Firmware","text":""},{"location":"software/#microcontroller-firmware","title":"\ud83d\udcbe Microcontroller Firmware","text":"<p>The heart of the electronic load is the custom firmware running on its ATmega328P microcontroller.</p> <p>The firmware is written in C++ and was developed using Visual Studio Code with the PlatformIO extension. This setup is recommended as it simplifies managing the project's libraries and build configurations. While it's possible to adapt the project for other environments like the Arduino IDE, using PlatformIO is the most straightforward path.</p>"},{"location":"software/#programming-options","title":"Programming Options","text":"<p>There are two methods to upload the firmware to the microcontroller:</p> <ul> <li> <p>USB</p> <p>This is the simplest method and uses the Micro USB port on the back panel. This connection utilizes the onboard converter board to communicate with the microcontroller's TX/RX pins.</p> <p>Warning</p> <p>This method will only work if the ATmega328P microcontroller already has an Arduino-compatible bootloader installed.</p> </li> <li> <p>ICSP Programmer</p> <p>This method programs the microcontroller directly. It is the primary way to:</p> <ul> <li>Upload firmware to a microcontroller that does not have a bootloader.</li> <li>Burn a bootloader onto the microcontroller, which then enables the simpler USB programming method.</li> </ul> <p>This method offers two key advantages over using a bootloader. First, it frees up flash memory, which can be helpful given the memory constraints of the ATmega328P. Second, it reduces the device's startup time, as the firmware runs immediately on power-up instead of waiting for the bootloader's timeout period.</p> <p>The main board includes a standard 6-pin ICSP (In-Circuit Serial Programming) header for connecting an external programmer, such as a USBasp.</p> <p>Uploading with ICSP erases the bootloader</p> <p>When you upload firmware directly using an ICSP programmer, it overwrites the entire flash memory of the microcontroller, including the bootloader. If you want to use the USB method again later, you will need to re-burn the bootloader using the ICSP programmer.</p> <p>To use this method with PlatformIO, you must add the following configuration to your <code>platformio.ini</code> file:</p> <pre><code>upload_protocol = custom\nupload_port = usb\nupload_flags = \n    -C\n    ${platformio.packages_dir}/tool-avrdude/avrdude.conf\n    -p\n    $BOARD_MCU\n    -P\n    $UPLOAD_PORT\n    -c\n    usbasp\nupload_command = avrdude $UPLOAD_FLAGS -U flash:w:$SOURCE:i\n</code></pre> </li> </ul>"},{"location":"software/#calibration-procedure","title":"Calibration Procedure","text":"<p>Video Guide Available</p> <p>A complete video guide is available on YouTube. It provides a full walkthrough of the calibration procedure, including the required hardware setup, modifying the firmware, and using the on-screen menu.</p> <p>Watch the calibration guide here</p> <p>To ensure both measurement (ADC) and setpoint (DAC) accuracy, a calibration routine is included in the firmware. This procedure only needs to be performed once, as the resulting calibration values are stored permanently in the microcontroller's EEPROM.</p> <p>Memory Limitation</p> <p>Due to the limited flash memory on the ATmega328P, the calibration function is disabled by default to make space for all the primary operating modes. You must temporarily modify the source code to access it.</p> <p>Follow these steps to enable the calibration mode:</p> <ol> <li> <p>Enable the Calibration Menu: In the <code>main.cpp</code> source file, find and uncomment the <code>case '6'</code> block for the calibration function:</p> <pre><code>case '6':\n    calibration(lcd, userInput, keypad, encoder, measurements, controls);\n    displayMenu(lcd);\n    break;\n</code></pre> </li> <li> <p>Disable Another Mode: To free up enough memory, you must temporarily comment out another mode. For example, you can disable the Transient Response Mode:</p> <pre><code>// case '4':\n//    transientResponseMode(lcd, userInput, keypad, encoder, measurements, controls, transient);\n//    displayMenu(lcd);\n//    break;\n</code></pre> </li> <li> <p>Upload and Calibrate: Compile and upload the modified firmware. The calibration menu will now be accessible by pressing <code>6</code> in the main menu of the load.</p> </li> </ol> <p>Important</p> <p>After you have completed the calibration, you must revert these changes (re-comment the calibration block and un-comment the mode you disabled) and re-upload the firmware to restore full functionality.</p>"},{"location":"software/#pc-application","title":"\ud83d\udda5\ufe0f PC Application","text":"<p>To complement the electronic load, a dedicated desktop application is available. The application currently focuses on enhancing the Battery Test Mode, with potential support for other operating modes in future updates.</p> <p></p> <p>The PC application interface during a battery discharge test.</p>"},{"location":"software/#key-features","title":"Key Features","text":"<ul> <li>Remote Control: Set the battery discharge current and the cut-off voltage directly from the application.</li> <li>Real-Time Visualization: View live plots of the battery's voltage and current throughout the discharge test.</li> <li>Data Export: Save the recorded discharge graph as a JPG image or export the raw measurement data as a CSV file for further analysis in other software.</li> <li>Multi-Language Support: The user interface is available in English, Polish, and German.</li> </ul>"},{"location":"software/#technical-details","title":"Technical Details","text":"<p>The application communicates with the electronic load via a serial connection through the Micro USB port. It was developed in C++ using the Qt framework, which allows it to be cross-platform.</p>"},{"location":"software/#availability","title":"Availability","text":"<p>Windows Users</p> <p>A pre-compiled, ready-to-use version for Windows is available for convenience in the project repository at: <code>desktop_app/release/windows-64bit/electronic_load_control_app.exe</code></p> <p>Linux and Other OS Users</p> <p>Since the application is built with the cross-platform Qt framework, it can be compiled for other operating systems like Linux. The full source code is available in the repository for users who wish to build it themselves. Pre-compiled binaries for Linux may be added in the future.</p>"},{"location":"testing-performance/","title":"Testing & Performance","text":""},{"location":"testing-performance/#calibration-accuracy","title":"Calibration &amp; Accuracy","text":"<p>The precision of the electronic load's current and voltage measurements, as well as its set current accuracy, were tested against the <code>Sanwa PC7000</code> multimeter. The following tables present the results of these measurements.</p>"},{"location":"testing-performance/#accuracy-of-set-and-measured-current-values","title":"Accuracy of set and measured current values","text":"Set Value [A] Load Measurement [A] Multimeter Measurement [A] 0.1 0.104 0.1032 \u00b1 0.0029 0.2 0.203 0.2024 \u00b1 0.0037 0.3 0.300 0.3000 \u00b1 0.0044 0.4 0.406 0.4051 \u00b1 0.0053 0.5 0.500 0.4997 \u00b1 0.0060 0.6 0.602 0.6020 \u00b1 0.0069 0.7 0.702 0.7020 \u00b1 0.0077 0.8 0.800 0.8000 \u00b1 0.0084 0.9 0.904 0.9038 \u00b1 0.0093 1.0 1.007 1.0065 \u00b1 0.0101 2.0 2.007 2.0070 \u00b1 0.0181 3.0 3.006 3.0057 \u00b1 0.0261 4.0 4.003 4.0022 \u00b1 0.0341 5.0 5.002 5.0007 \u00b1 0.0421 6.0 6.001 5.996 \u00b1 0.068 7.0 6.998 6.997 \u00b1 0.076 8.0 7.998 7.990 \u00b1 0.084"},{"location":"testing-performance/#accuracy-of-voltage-measurements","title":"Accuracy of voltage measurements","text":"Load Measurement [V] Multimeter Measurement [V] 1.002 1.0022 \u00b1 0.0006 2.002 2.0029 \u00b1 0.0009 3.004 3.0043 \u00b1 0.0012 4.004 4.0039 \u00b1 0.0015 5.006 5.0058 \u00b1 0.0018 8.004 8.004 \u00b1 0.006 10.01 10.007 \u00b1 0.007 12.01 12.008 \u00b1 0.007 14.01 14.010 \u00b1 0.008 16.01 16.004 \u00b1 0.009 18.01 18.007 \u00b1 0.010 20.01 20.008 \u00b1 0.011 25.01 25.011 \u00b1 0.013 30.02 30.016 \u00b1 0.015 35.02 35.019 \u00b1 0.017 40.02 40.019 \u00b1 0.019 45.02 45.023 \u00b1 0.021 50.01 50.012 \u00b1 0.023 <p>Conclusion \u2705</p> <p>The current values measured by the electronic load did not deviate from the set value by more than 7 mA. All measurements taken by the electronic load are within the range of values measured by the multimeter, considering the multimeter's measurement error.</p>"},{"location":"testing-performance/#thermal-performance","title":"Thermal Performance","text":"<p>At full load (300 W for short periods), the device maintained safe thermal conditions due to a heatsink and active fan cooling. Continuous operation at 200 W is sustainable.</p>"},{"location":"testing-performance/#step-response","title":"Step Response","text":"<p>Step changes in load (1\u20133 A, 3\u20135 A, 6\u20138 A) showed fast transitions with no overshoot or oscillation. This confirms stable control loop performance.</p> Transients 24VTransients 5V <p></p> <p></p>"},{"location":"testing-performance/#battery-testing","title":"Battery Testing","text":"<p>The battery test mode successfully measured capacity by monitoring discharge current and cutoff voltage. Data was logged and visualized in the PC application.</p>"},{"location":"testing-performance/#tools-used-for-testing","title":"Tools Used for Testing","text":"<ul> <li>Sanwa PC7000 Multimeter</li> <li>Rigol MSO2102A Oscilloscope</li> <li>AXIOMET AX-3005PQ Power Supplies</li> </ul>"}]}